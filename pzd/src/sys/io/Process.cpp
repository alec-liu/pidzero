// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_sys_io_Process
#include <sys/io/Process.h>
#endif

namespace sys{
namespace io{

void Process_obj::__construct() { }

Dynamic Process_obj::__CreateEmpty() { return new Process_obj; }

void *Process_obj::_hx_vtable = 0;

Dynamic Process_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Process_obj > _hx_result = new Process_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Process_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x15242bc4;
}


Process_obj::Process_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Process_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Process_obj_sStaticStorageInfo = 0;
#endif

static void Process_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Process_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Process_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Process_obj::__mClass,"__mClass");
};

#endif

hx::Class Process_obj::__mClass;

void Process_obj::__register()
{
	hx::Object *dummy = new Process_obj;
	Process_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("sys.io.Process","\x88","\x47","\xb1","\x77");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Process_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Process_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Process_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Process_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Process_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace sys
} // end namespace io
