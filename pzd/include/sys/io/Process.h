// Generated by Haxe 3.4.7
#ifndef INCLUDED_sys_io_Process
#define INCLUDED_sys_io_Process

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(sys,io,Process)

namespace sys{
namespace io{


class HXCPP_CLASS_ATTRIBUTES Process_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Process_obj OBJ_;
		Process_obj();

	public:
		enum { _hx_ClassId = 0x15242bc4 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="sys.io.Process")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"sys.io.Process"); }

		hx::ObjectPtr< Process_obj > __new() {
			hx::ObjectPtr< Process_obj > __this = new Process_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Process_obj > __alloc(hx::Ctx *_hx_ctx) {
			Process_obj *__this = (Process_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Process_obj), false, "sys.io.Process"));
			*(void **)__this = Process_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Process_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Process","\x4f","\xca","\x9b","\xbe"); }

};

} // end namespace sys
} // end namespace io

#endif /* INCLUDED_sys_io_Process */ 
